#!/bin/bash

#处理编译出错的情况
compile_ErrorHander()
{
	echo "smake: smake didn't successfully compile because some errors arose"
	exit 1
}

#根据输入的文件名生成目标文件和可执行文件
comp()
{
#	filename=$1
#	filepath=./$filename
#	gcc -c ${filename}>/dev/null 2>&1
#	#将filename的后缀.c去掉
#	filename1="${filename%\.*}"
#	filename2=./$filename1".o"	
#	gcc $filename2 -o ${filename%\.*}>/dev/null 2>&1
	find . -name "*.c" -exec gcc -c {} \;>/dev/null 2>&1
#	find . -name "*.o" -exec gcc -o {} \{{}%\.*\} \;>/dev/null 2>&1
#	find . -name "*.o" -exec a={} \; -exec echo $a \; -exec b=${a:2:$\(#a\)-4)} \; -exec echo "$b" \;
	for filename in `ls *.o`
		do
			gcc $filename -o ${filename%.*}>/dev/null 2>&1
		done
}

inst()
{
	#dest为目标,origin为待处理的文件的路径
	dest="$2"
	origin=$3
	#处理目标不存在或者不是文件夹的情况
	if [ ! -e $dest -o ! -d $dest ];then
		echo "smake: Please use a valid destination!"
	fi
	#在存放位置有效的情况下 将待移动的文件一一移过去
	#利用shift遍历所有的参数,循环终止条件为$origin为空
	while [ ! "$origin" = "" ]
	do
		#处理待移动的文件不存在的情况
		if [ ! -e $origin ];then
                	echo "smake: This Installfile:$origin doesn't exist!"
			exit 1
		else
			install $origin $dest
		fi
		shift
		origin=$3
	done
}

#清理当前目录下所有的.o目标文件 同时根据用户的输入来判断删除二进制文件
clean(){
	flag=1
	#判断当前目录下是否有.o结尾的文件
	if ! ls *.o>/dev/null 2>&1;then
		flag=0
	fi
	#删除当前目录下所有以.o结尾的文件
	find . \( -name "*.o" -o -name 'a.out' \) -exec rm -rf {} \;
	while true
	do
		read -p "smake: Do you want to remove the binary file? (y/N)" msg
		if [ $msg = "y" ];then
			read -p "smake: Enter your binary file name:" file_name
				#处理文件不存在的情况
				if [ -e ./$file_name ];then
					rm ./$file_name
					echo "All files have been removed"
				else
					echo "Please enter an existing filename!"
				fi
		elif [ $msg = "N" ];then
			if [ "$flag" = "0" ];then
				echo "smake: Nothion to be done heare, exiting..."
			fi
			break
		else
			echo "Please answer y/N!"
		fi
	done
					
}

#输出帮助
gethelp()
{
	echo -e "smake usage:\n   smake compile\n   smake install DESTINATION INSTALLFILELIST\n   smake clean"
}


#程序入口
case $1 in 
	"compile" | "Compile" )	comp  ||  compile_errorHander 
		;;
	"install" | "Install" ) inst $@
		;;
	"clean" | "Clean" ) clean
		;;
	* ) gethelp
		;;
esac

